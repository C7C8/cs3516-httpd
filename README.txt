HTTPC + HTTPD

###IMPORTANT###
THIS PROGRAM WILL NOT COMPILE ON A VERSION OF G++ LESS THAN 4.8
IT REQUIRES C++11 SUPPORT, WHICH NEITHER ccc.wpi.edu NOR
rambo.wpi.edu HAVE. PLEASE CHECK YOUR G++ VERSION (g++ -v)
BEFORE COMPILATION, OR IT WILL PROBABLY FAIL. Also know that
any warnings from cmdline.c/h files are not my own fault, those
files are auto-generated.


To compile: `make all`, or `make httpc` and `make httpd` for the
client and server, respectively. Files named cmdline.h and cmdline.c
ARE NOT MY OWN, THEY ARE AUTOGENERATED. That being said, if you have
GNU Gengetopt installed, you *can* delete them; the makefile will
rebuild them for you. If for whatever reason the makefile fails,
the only flags needed for g++ are -pthread and -std=c++1y.

Both the client and server have a full command line interface, the full
details of which may be accessed by using the -h or --detailed-help flags.
Briefly, here is usage info for both client and server:

CLIENT:
Usage: ./client [-vp] URL port
-v/--verbose: Verbose, print connection info and requests sent
-p/--print-rtt: Print RTT in milliseconds

The client will dump received content to stdout; output by file can be
achieved by redirect in shell (e.g. ./client mywebsite.com 80 > myfile.html)

SERVER:
-v/--verbose: Verbose, print connection info, requests received, and general server status.
-t/--threads: Maximum thread count, give an integer afterwards. By default the server will
		use a thread count of however many cores you have (e.g. a desktop i7 will
		get defaulted to 8), but you may override this. IMPORTANT FOR GRADERS:
		IF YOU WANT TO USE 10 CLIENTS SIMULTANEOUSLY, YOU *MUST* USE THIS OPTION,
		THE SERVER WILL DELAY REQUESTS UNTIL IT HAS ROOM FOR ANOTHER THREAD!
-p/--port: Port to run on. Defaults to 1701. If you use a port lower than 1024, you'll need
		to run as root/with privileges. 
-d/--dameon: Fork server to background (run as daemon). Will record PID in a file stored in
		/tmp. Use -k/--kill to kill daemonized server.
-k/--kill: Kill daemonized server. Excludes all flags but -v/--verbose.

The server will always serve files up from the directory it was started in, regardless of
whether it was set to run as a daemon or not. Note that the server will keep a responder
thread open for every client until the client closes the connection or a
"Connection: close" header is received. Many web browsers keep their connection open by
default.
